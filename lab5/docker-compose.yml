version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: profi_postgres
    environment:
      POSTGRES_DB: profi_db
      POSTGRES_USER: profi_user
      POSTGRES_PASSWORD: profi_pass
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - profi-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: profi_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - profi-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  mongodb:
    image: mongo:5.0
    container_name: profi_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: profi_mongo_pass
      MONGO_INITDB_DATABASE: catalog_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - profi-network
    restart: unless-stopped

  user-service:
    build: ./user-service
    ports:
      - "8080:8000"
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://profi_user:profi_pass@postgres:5432/profi_db
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./user-service:/app
    networks:
      - profi-network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  catalog-service:
    build: ./catalog-service
    ports:
      - "8081:8001"
    environment:
      - PYTHONPATH=/app
      - MONGODB_URL=mongodb://root:profi_mongo_pass@mongodb:27017/catalog_db?authSource=admin
    volumes:
      - ./catalog-service:/app
    networks:
      - profi-network
    depends_on:
      - mongodb
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  mongodb_data:

networks:
  profi-network:
    driver: bridge 